#include <stdlib.h>
#include <stdio.h>
#include <string.h>

#include "question.h"
#include "answer.h"
#include "exam.h"
#include "questions_themes.h"
#include "interactive.h"
#include "common.h"

#include "../lib/commands.h"

#ifndef POSTGRES
char SQLSTATE[6];
#define SQLCODE sqlca.sqlcode
#endif

/* The list of our supported commands */
struct command commands[] = {
    { "question",  question, "manages questions",
        "Usage: question [args...]\n"
        "\t-a\tcreates a new question\t-a <statement>\n"
        "\t-d\tdeletes a question\t-d <id>\n"
        "\t-e\tedits a question\t-e <id> <statement>\n"
        "\t-s\tshows a question\t-s <id>\n"
        "\t-l\tlists all questions\t-l [<theme_id>] [--detailed]\n"
        "\t-t\tlists all questions by theme and subject\t-t [--detailed]\n"
        "Prints the question id on success to stdout." },
    { "answer", answer, "manages answers",
        "Usage: answer [args...]\n"
        "\t-a\tcreates an answer\t-a <question_id> <statement> [priority] [--correct]\n"
        "\t-l\tlist answers for a question\t-l <question_id>\n"
        "\t-d\tdeletes a question\t-d <id>" },
    { "exam", exam, "manages exams",
        "Usage: answer [args...]\n"
        "\t-l\tlist exams for a question\t-l <question_id>\n" },
    { "questions_themes", questions_themes, "Relation between questions and themes",
        "\t-a\tads a new relationship\t-a <question_id> <theme_id>\n" },
    { "interactive", interactive, "Open an interactive session" },
    { NULL, NULL, NULL, NULL }
};


void handle_error() {
    fprintf(stderr, "[ERROR] %s | SQLSTATE(%s), SQLCODE(%ld)\n", sqlca.sqlerrm.sqlerrmc,
                                                                 SQLSTATE,
                                                                 SQLCODE);
    exit(1);
}

int main(int argc, char** argv) {
    EXEC SQL WHENEVER SQLERROR DO handle_error();
#ifndef POSTGRES
    EXEC SQL BEGIN DECLARE SECTION;
    char oracle_id[] = "/";
    EXEC SQL END DECLARE SECTION;
    EXEC SQL CONNECT :oracle_id;
#else
    EXEC SQL CONNECT TO exams;
#endif

    int ret = command_exec(commands, argc, argv);

    if ( appcom.ret.int_value )
        printf("%d\n", appcom.ret.int_value);

    EXEC SQL COMMIT;

    return ret;
}

